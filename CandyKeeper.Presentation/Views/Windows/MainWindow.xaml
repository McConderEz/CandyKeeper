<Window x:Class="CandyKeeper.Presentation.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CandyKeeper.Presentation"
        xmlns:vm="clr-namespace:CandyKeeper.Presentation.ViewModels"
        xmlns:ext="clr-namespace:CandyKeeper.Presentation.Extensions"
        xmlns:cmd="clr-namespace:CandyKeeper.Presentation.Infrastructure.Commands"
        xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
        mc:Ignorable="d"
        Height="720" Width="1200" WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        AllowsTransparency="True" Background="Transparent"     
        DataContext="{Binding MainWindowsViewModel,Source={StaticResource Locator}}"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <Window.Resources>
        <ext:TabsItemToVisibilityConverter x:Key="TabsItemToVisibilityConverter"/>
        <ext:MultiConditionToVisibilityConverter x:Key="MultiConditionToVisibilityConverter"/>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
        <Style x:Key="DataGridRowStyle1" TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Margin" Value="0 4 0 0"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
            <Setter Property="ValidationErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <Border x:Name="DGR_Border" Background="{TemplateBinding Background}" CornerRadius="5" Padding="0 8" BorderThickness="0" SnapsToDevicePixels="True">
                            <SelectiveScrollingGrid>
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </SelectiveScrollingGrid.RowDefinitions>
                                <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                                <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                            </SelectiveScrollingGrid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#DAA520"/>
                    <Setter Property="Foreground" Value="#ffffff"/>
                </Trigger>

                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#DAA520"/>
                    <Setter Property="Foreground" Value="#ffffff"/>
                </Trigger>

                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true"/>
                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="#dfdfdf"/>
                </MultiTrigger>
                
            </Style.Triggers>
            

        </Style>
        <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Width" Value="8"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="SizeWE"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridColumnHeaderStyle1" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#69717d"/>
            <Setter Property="Margin" Value="15 0 15 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <theme:DataGridHeaderBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" IsClickable="{TemplateBinding CanUserSort}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" SeparatorBrush="{TemplateBinding SeparatorBrush}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </theme:DataGridHeaderBorder>
                            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="#FF000000"/>
        <Style x:Key="DataGridCellStyle1" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Margin" Value="15 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true"/>
                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Border Background="#eff2f7" CornerRadius="30" 
            MouseDown="Border_MouseDown" MouseLeftButtonDown="Border_MouseLeftButtonDown">
        
             
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <!--Бокове меню-->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <!--Иконка меню-->
                
                <Button HorizontalAlignment="Left" Margin="20 28 0 35" Style="{StaticResource topButton}">
                    <Icon:PackIconMaterial Kind="Menu" Width="15" Height="15"/>
                </Button>

                <Border Grid.Row="1" Background="#F5DEB3" CornerRadius="0 50 0 30">
                    <DockPanel>
                        <!--Лого меню-->
                        <Border Width="80" Height="80" Padding="1" Background="White" CornerRadius="100"
                                DockPanel.Dock="Top" HorizontalAlignment="Left" Margin="20 -30 0 0">
                            <Ellipse>
                                <Ellipse.Fill>
                                    <ImageBrush ImageSource="pack://application:,,,/Images/avatardefault_92824.png"/>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Border>
                        <TextBlock Text="{Binding CurrentUser.Name}" Foreground="#5c2828" FontSize="16" FontWeight="SemiBold"
                                   DockPanel.Dock="Top" TextAlignment="Center" Margin="5 10 0 5"/>
                        <TextBlock Text="Candy Keeper" Foreground="#5c2828" FontSize="22" FontWeight="SemiBold"
                                DockPanel.Dock="Top" TextAlignment="Center" Margin="5 10 0 10"/>

                        <Separator Margin="25" DockPanel.Dock="Top" Height="0.8" Background="#A0522D"/>

                        <!--Вкладки-->
                        <StackPanel DockPanel.Dock="Top" Visibility="{Binding IsAdminVisible, Converter={StaticResource TabsItemToVisibilityConverter}}">
                            <Button Style="{StaticResource menuButton}" Command="{Binding SelectViewCommand}" CommandParameter="AdminPanelView">
                                <StackPanel Orientation="Horizontal">
                                    <Icon:PackIconMaterial Kind="MonitorAccount" Style="{StaticResource menuButtonIcon}"/>
                                    <TextBlock Text="Админ-панель"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                        
                        <StackPanel DockPanel.Dock="Top">
                            <StackPanel.Visibility>
                                <MultiBinding Converter="{StaticResource MultiConditionToVisibilityConverter}">
                                    <Binding Path="IsClientVisible" />
                                    <Binding Path="IsManagerVisible" />
                                </MultiBinding>
                            </StackPanel.Visibility>
                            <Button Style="{StaticResource menuButton}" Command="{Binding SelectViewCommand}" CommandParameter="ProductForSaleView">
                                <StackPanel Orientation="Horizontal">
                                    <Icon:PackIconMaterial Kind="Candy" Style="{StaticResource menuButtonIcon}"/>
                                    <TextBlock Text="Продукция"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>

                        <StackPanel DockPanel.Dock="Top" Visibility="{Binding IsManagerVisible, Converter={StaticResource TabsItemToVisibilityConverter}}">
                            <Button Style="{StaticResource menuButton}" Command="{Binding SelectViewCommand}" CommandParameter="StoreView">
                                <StackPanel Orientation="Horizontal">
                                    <Icon:PackIconMaterial Kind="Store" Style="{StaticResource menuButtonIcon}"/>
                                    <TextBlock Text="Магазины"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>

                        <StackPanel DockPanel.Dock="Top" Visibility="{Binding IsManagerVisible, Converter={StaticResource TabsItemToVisibilityConverter}}">
                            <Button Style="{StaticResource menuButton}" Command="{Binding SelectViewCommand}" CommandParameter="ProductDeliveryView">
                                <StackPanel Orientation="Horizontal">
                                    <Icon:PackIconMaterial Kind="Certificate" Style="{StaticResource menuButtonIcon}"/>
                                    <TextBlock Text="Поставки"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>

                        <StackPanel DockPanel.Dock="Top" Visibility="{Binding IsManagerVisible, Converter={StaticResource TabsItemToVisibilityConverter}}">
                            <Button Style="{StaticResource menuButton}" Command="{Binding SelectViewCommand}" CommandParameter="SupplierView">
                                <StackPanel Orientation="Horizontal">
                                    <Icon:PackIconMaterial Kind="TruckDelivery" Style="{StaticResource menuButtonIcon}"/>
                                    <TextBlock Text="Поставщики"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>

                        <StackPanel DockPanel.Dock="Top" Visibility="{Binding IsManagerVisible, Converter={StaticResource TabsItemToVisibilityConverter}}">
                            <Button Style="{StaticResource menuButton}" Command="{Binding SelectViewCommand}" CommandParameter="ProductView">
                                <StackPanel Orientation="Horizontal">
                                    <Icon:PackIconMaterial Kind="Cookie" Style="{StaticResource menuButtonIcon}"/>
                                    <TextBlock Text="Кондитерские изделия"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                        
                        <StackPanel DockPanel.Dock="Top" Visibility="{Binding IsAdminVisible, Converter={StaticResource TabsItemToVisibilityConverter}}">
                            <Button Style="{StaticResource menuButton}" Command="{Binding SelectViewCommand}" CommandParameter="PackagingView">
                                <StackPanel Orientation="Horizontal">
                                    <Icon:PackIconMaterial Kind="Package" Style="{StaticResource menuButtonIcon}"/>
                                    <TextBlock Text="Расфасовка"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>

                        <StackPanel DockPanel.Dock="Top" Visibility="{Binding IsAdminVisible, Converter={StaticResource TabsItemToVisibilityConverter}}">
                            <Button Style="{StaticResource menuButton}" Command="{Binding SelectViewCommand}" CommandParameter="CityView">
                                <StackPanel Orientation="Horizontal">
                                    <Icon:PackIconMaterial Kind="City" Style="{StaticResource menuButtonIcon}"/>
                                    <TextBlock Text="Города"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>

                        <StackPanel DockPanel.Dock="Top" Visibility="{Binding IsAdminVisible, Converter={StaticResource TabsItemToVisibilityConverter}}">
                            <Button Style="{StaticResource menuButton}" Command="{Binding SelectViewCommand}" CommandParameter="DistrictView">
                                <StackPanel Orientation="Horizontal">
                                    <Icon:PackIconMaterial Kind="Latitude" Style="{StaticResource menuButtonIcon}"/>
                                    <TextBlock Text="Районы"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>

                        <StackPanel DockPanel.Dock="Top" Visibility="{Binding IsAdminVisible, Converter={StaticResource TabsItemToVisibilityConverter}}">
                            <Button Style="{StaticResource menuButton}" Command="{Binding SelectViewCommand}" CommandParameter="OwnershipTypeView">
                                <StackPanel Orientation="Horizontal">
                                    <Icon:PackIconMaterial Kind="Locker" Style="{StaticResource menuButtonIcon}"/>
                                    <TextBlock Text="Тип собственности"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>

                        <StackPanel DockPanel.Dock="Top" Visibility="{Binding IsAdminVisible, Converter={StaticResource TabsItemToVisibilityConverter}}">
                            <Button Style="{StaticResource menuButton}" Command="{Binding SelectViewCommand}" CommandParameter="ProductTypeView">
                                <StackPanel Orientation="Horizontal">
                                    <Icon:PackIconMaterial Kind="Candycane" Style="{StaticResource menuButtonIcon}"/>
                                    <TextBlock Text="Вид конд. изделия"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                                               
                        
                    </DockPanel>
                </Border>
            </Grid>

            <Grid Grid.Column="1" Margin="30 20 20 20">
                <ContentControl Grid.Row="1" Content="{Binding CurrentView}"/>
                    

               <!--<ContentControl x:Name="ContentArea" Grid.Row="1"/>-->
            </Grid>

          
        </Grid>
    </Border>
    
</Window>
